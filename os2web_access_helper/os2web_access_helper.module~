<?php

/*TO DELETE AFTER TEST*/
function os2web_access_helper_menu() {
  $items = array();
  $items['test/delete_users_rights'] = array(
      'page callback' => 'os2web_access_helper_delete_user_rights',
      'access arguments' => array('administer os2web'),
      'type' => MENU_CALLBACK,
  );

  return $items;
}

function os2web_access_helper_meeting_has_speaker_paper($meeting_id){
  $meetings = entity_load('node', array($meeting_id));
  $meeting = $meetings[$meeting_id];
  if (isset($meeting->field_ref_bullet_points['und'])){
    foreach ($meeting->field_ref_bullet_points['und'] as $bullet_point){
      if (os2web_access_helper_bullet_point_has_speaker_paper($bullet_point['target_id']))
	return true;
    }
  }

  return false;
}

function os2web_access_helper_bullet_point_has_speaker_paper($bullet_point_id){
  global $user;  
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->propertyCondition('type', array('speaker_paper'))
    ->propertyCondition('uid', $user->uid)
    ->fieldCondition('field_ref_bullet_point', 'target_id', $bullet_point_id, '=');
  
  $result = $query->execute();

  return isset($result['node']);
}

function os2web_access_helper_check_user_can_see_bullet_point($meeting_id, $bullet_point_id){
    global $user;

    if (!$user->uid)
      return false;

    if (os2web_access_helper_check_bullet_point_is_part_of_meeting($meeting_id, $bullet_point_id)){
      $bullet_points = entity_load('node', array($bullet_point_id), array('type'=>'bullet_point'));
      $is_closed = $bullet_points[$bullet_point_id]->field_bul_point_closed['und'][0]['value'];
      
      if (intval($is_closed) == 0){ //is opened
	return true;
      } else { //is closed
	$user_ent = entity_load('user', array($user->uid));

	$meetings = entity_load('node', array($meeting_id), array('type'=>'meeting'));
	$meeting_committee_id = $meetings[$meeting_id]->field_committee['und'][0]['tid'];

	if (!empty($user_ent[$user->uid]->field_user_committee)){  //is part of the committee
	  foreach ($user_ent[$user->uid]->field_user_committee['und'] as $user_committee_id){  
	    if (intval($meeting_committee_id) == $user_committee_id['tid']){
	      return true;
	    }
	  }
	}

	if (!empty($user_ent[$user->uid]->field_follows_committee_plus)){  //follows committee PLUS
	  foreach ($user_ent[$user->uid]->field_follows_committee_plus['und'] as $user_committee_id){  
	    if (intval($meeting_committee_id) == $user_committee_id['tid']){
	      return true;
	    }
	  }
	}
	//none of the above, access denied
	return false;
      }
    } else 
      return false;
}

function os2web_access_helper_check_user_can_see_bullet_point_attachment($meeting_id, $bullet_point_id, $bullet_point_attachment_id){
  if (os2web_access_helper_check_attachment_is_part_of_bullet_point($bullet_point_id, $bullet_point_attachment_id))
    return os2web_access_helper_check_user_can_see_bullet_point($meeting_id, $bullet_point_id);
  else
    return false;
}


function os2web_access_helper_check_bullet_point_is_part_of_meeting($meeting_id, $bullet_point_id){
    $meetings = entity_load('node', array($meeting_id), array('type'=>'meeting'));
    $meeting = $meetings[$meeting_id];
    
    $contains = false;
    if (!empty($meeting->field_ref_bullet_points['und'])){
      foreach ($meeting->field_ref_bullet_points['und'] as $ref_bullet_point){
	if (intval($bullet_point_id) == intval($ref_bullet_point['target_id'])){	
	  $contains = true;
	  break;
	}
      }
    }
    return $contains;
}

function os2web_access_helper_check_attachment_is_part_of_bullet_point($bullet_point_id, $bilag_id){
    $bullet_points = entity_load('node', array($bullet_point_id), array('type'=>'bullet_point'));
    $bullet_point = $bullet_points[$bullet_point_id];

    $contains = false;
    if (!empty($bullet_point->field_ref_attachment['und'])){
      foreach ($bullet_point->field_ref_attachment['und'] as $ref_bullet_point_attachment){
	if (intval($bilag_id) == intval($ref_bullet_point_attachment['target_id'])){	
	  $contains = true;
	  break;
	}
      }
    }
    return $contains;
}

function os2web_access_helper_get_client_ip() {
    $ipaddress = '';
    if (getenv('HTTP_CLIENT_IP'))
	    $ipaddress = getenv('HTTP_CLIENT_IP');
    else if(getenv('HTTP_X_FORWARDED_FOR'))
	    $ipaddress = getenv('HTTP_X_FORWARDED_FOR');
    else if(getenv('HTTP_X_FORWARDED'))
	    $ipaddress = getenv('HTTP_X_FORWARDED');
    else if(getenv('HTTP_FORWARDED_FOR'))
	    $ipaddress = getenv('HTTP_FORWARDED_FOR');
    else if(getenv('HTTP_FORWARDED'))
	    $ipaddress = getenv('HTTP_FORWARDED');
    else if(getenv('REMOTE_ADDR'))
	    $ipaddress = getenv('REMOTE_ADDR');
    else
	    $ipaddress = "UNKNOWN";

    return $ipaddress;
}

function os2web_access_helper_cron(){
   $uids = db_select('users', 'u')
      ->fields('u')
      ->execute()
      ->fetchAssoc();
    
   foreach ($uids as $uid){
    error_log($uid->uid);
   }
   error_log("clearing users positions");
}

function os2web_access_helper_delete_user_rights(){
   $users = db_select('users', 'u')
      ->fields('u', array('uid'))
      ->execute()
      ->fetchAll();
    
   foreach ($users as $user){
      $full_user = user_load($user->uid);
      if (isset($full_user->field_user_positions['und'])){
	foreach ($full_user->field_user_positions['und'] as $pos_index => $pos){
	  $pos_full = taxonomy_term_load($pos['tid']);
	  if (isset($pos_full->field_user_pos_valid['und'])){
	    $valid_until = strtotime($pos_full->field_user_pos_valid['und']['0']['value2']);
	    if (strtotime('now') > $valid_until){
		//deleting user connection to that committee (member of)
		if (isset($full_user->field_user_committee['und'])){
		  foreach ($full_user->field_user_committee['und'] as $com_index => $com){
		    if ($com['tid'] == $pos_full->field_user_pos_committee['und']['0']['tid'])
		      unset($full_user->field_user_committee['und'][$com_index]);
		  }
		}

		//deleting user connection to role
		unset($full_user->field_user_positions['und'][$pos_index]);

		user_save($full_user);//save changes

		//deleting the role itself
		taxonomy_term_delete($pos['tid']);
	    }
	  }
	}
      }
   }
}

?>
